kind: ConfigMap
apiVersion: v1
metadata:
  name: nginx-configuration-dc2
  namespace: example-ns
  labels:
    app.kubernetes.io/name: ingress-nginx-dc2
    app.kubernetes.io/part-of: ingress-nginx-dc2

---
kind: ConfigMap
apiVersion: v1
metadata:
  name: tcp-services-dc2
  namespace: example-ns
  labels:
    app.kubernetes.io/name: ingress-nginx-dc2
    app.kubernetes.io/part-of: ingress-nginx-dc2

---
kind: ConfigMap
apiVersion: v1
metadata:
  name: udp-services-dc2
  namespace: example-ns
  labels:
    app.kubernetes.io/name: ingress-nginx-dc2
    app.kubernetes.io/part-of: ingress-nginx-dc2

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nginx-ingress-serviceaccount-dc2
  namespace: example-ns
  labels:
    app.kubernetes.io/name: ingress-nginx-dc2
    app.kubernetes.io/part-of: ingress-nginx-dc2

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: nginx-ingress-clusterrole-dc2
  labels:
    app.kubernetes.io/name: ingress-nginx-dc2
    app.kubernetes.io/part-of: ingress-nginx-dc2
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - endpoints
      - nodes
      - pods
      - secrets
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - "extensions"
      - "networking.k8s.io"
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - "extensions"
      - "networking.k8s.io"
    resources:
      - ingresses/status
    verbs:
      - update

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: nginx-ingress-role-dc2
  namespace: example-ns
  labels:
    app.kubernetes.io/name: ingress-nginx-dc2
    app.kubernetes.io/part-of: ingress-nginx-dc2
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - pods
      - secrets
      - namespaces
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - configmaps
    resourceNames:
      # Defaults to "<election-id>-<ingress-class>"
      # Here: "<ingress-controller-leader>-<nginx>"
      # This has to be adapted if you change either parameter
      # when launching the nginx-ingress-controller.
      - "ingress-controller-leader-nginx"
    verbs:
      - get
      - update
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - endpoints
    verbs:
      - get

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: nginx-ingress-role-nisa-binding-dc2
  namespace: example-ns
  labels:
    app.kubernetes.io/name: ingress-nginx-dc2
    app.kubernetes.io/part-of: ingress-nginx-dc2
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: nginx-ingress-role-dc2
subjects:
  - kind: ServiceAccount
    name: nginx-ingress-serviceaccount-dc2
    namespace: example-ns

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: nginx-ingress-clusterrole-nisa-binding-dc2
  labels:
    app.kubernetes.io/name: ingress-nginx-dc2
    app.kubernetes.io/part-of: ingress-nginx-dc2
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nginx-ingress-clusterrole-dc2
subjects:
  - kind: ServiceAccount
    name: nginx-ingress-serviceaccount-dc2
    namespace: example-ns

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-ingress-controller-dc2
  namespace: example-ns
  labels:
    app.kubernetes.io/name: ingress-nginx-dc2
    app.kubernetes.io/part-of: ingress-nginx-dc2
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ingress-nginx-dc2
      app.kubernetes.io/part-of: ingress-nginx-dc2
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ingress-nginx-dc2
        app.kubernetes.io/part-of: ingress-nginx-dc2
      annotations:
        prometheus.io/port: "10254"
        prometheus.io/scrape: "true"
    spec:
      # wait up to five minutes for the drain of connections
      terminationGracePeriodSeconds: 300
      serviceAccountName: nginx-ingress-serviceaccount-dc2
      nodeSelector:
        kubernetes.io/os: linux
      containers:
        - name: nginx-ingress-controller-dc2
          image: quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.26.1
          args:
            - /nginx-ingress-controller
            - --configmap=$(POD_NAMESPACE)/nginx-configuration-dc2
            - --tcp-services-configmap=$(POD_NAMESPACE)/tcp-services-dc2
            - --udp-services-configmap=$(POD_NAMESPACE)/udp-services-dc2
            - --publish-service=$(POD_NAMESPACE)/ingress-nginx--dc2
            - --annotations-prefix=nginx.ingress.kubernetes.io
            - --watch-namespace=example-ns
            - --default-ssl-certificate=example-ns/star-example-com-tls
          securityContext:      
            allowPrivilegeEscalation: true
            capabilities:
              drop:
                - ALL
              add:
                - NET_BIND_SERVICE
            # www-data -> 33
            runAsUser: 33
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
            - name: http
              containerPort: 80
            - name: https
              containerPort: 443
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          lifecycle:
            preStop:
              exec:
                command:
                  - /wait-shutdown
---
